import React, { Fragment } from 'react';
import { BrowserRouter, Switch, Route } from 'react-router-dom';
import SelectGame from './pages/SelectGame';
import PlayerPCGameMode from './pages/PlayerPCGameMode';
import ComputerGameMode from './pages/ComputerGameMode';

class Routes extends Component {
  constructor(props) {
    super(props);
    this.state = {
      userChoice: weapons[0],
      userScore: 0,
      laptopChoice: weapons[0],
      laptopScore: 0,
      computerChoice: weapons[0],
      computerScore: 0,
      roundWinner: ''
    };
  }
  //select PC vs Laptop
  laptopVsComputerGame = () => {
    let counter = 0;
    let gameInterval = setInterval(() => {
      counter++;
      this.setState({
        computerChoice: weapons[Math.floor(Math.random() * weapons.length)],
        laptopChoice: weapons[Math.floor(Math.random() * weapons.length)],
        roundWinner: ''
      });
      if (counter > 5) {
        clearInterval(gameInterval);
        this.setState({
          roundWinner: this.selectWinner()
        });
        if (this.state.roundWinner === 'Laptop Won!') {
          this.setState({
            laptopScore: this.state.laptopScore + 1
          });
        } else if (this.state.roundWinner === 'Laptop Lost!') {
          this.setState({
            computerScore: this.state.computerScore + 1
          });
        }
      }
    }, 1000);
  };

  // select Player vs PC
  playerVsComputerGame = () => {
    let counter = 0;
    let gameInterval = setInterval(() => {
      counter++;
      this.setState({
        computerChoice: weapons[Math.floor(Math.random() * weapons.length)],
        roundWinner: ''
      });
      if (counter > 5) {
        clearInterval(gameInterval);
        this.setState({
          roundWinner: this.selectWinner()
        });
        if (this.state.roundWinner === 'You Won!') {
          this.setState({
            userScore: this.state.userScore + 1
          });
        } else if (this.state.roundWinner === 'You Lost!') {
          this.setState({
            computerScore: this.state.computerScore + 1
          });
        }
      }
    }, 100);
  };
  // laptop vs computer
  decideWinner = () => {
    const { laptopChoice, computerChoice } = this.state;
    if (laptopChoice === computerChoice) {
      return "It's a Tie!";
    } else if (
      (laptopChoice === 'rock' && computerChoice === 'scissors') ||
      (laptopChoice === 'scissors' && computerChoice === 'paper') ||
      (laptopChoice === 'paper' && computerChoice === 'rock')
    ) {
      return 'Laptop Won!';
    } else {
      return 'Laptop Lost!';
    }
  };
  chooseWeapon = weapon => {
    this.setState({
      laptopChoice: weapons[Math.floor(Math.random() * weapons.length)],
      roundWinner: ''
    });
  };

  // player vs computer
  selectWinner = () => {
    const { userChoice, computerChoice } = this.state;
    if (userChoice === computerChoice) {
      return "It's a Tie!";
    } else if (
      (userChoice === 'rock' && computerChoice === 'scissors') ||
      (userChoice === 'scissors' && computerChoice === 'paper') ||
      (userChoice === 'paper' && computerChoice === 'rock')
    ) {
      return 'You Won!';
    } else {
      return 'You Lost!';
    }
  };
  selectWeapon = weapon => {
    this.setState({
      userChoice: weapon,
      roundWinner: ''
    });
  };

  return (
    <BrowserRouter>
      <Switch>
        <Route exact path="/" component={SelectGame} />
        <Route
          path="/player-vs-computer-game-mode"
          exact
          component={PlayerPCGameMode}
        />
        <Route
          exact
          path="/laptop-vs-desktop-game-mode"
          component={ComputerGameMode}
        />
        <Route
          path={`/player-vs-computer-game-mode`}
          render={props => (
            <PlayerPCGameMode
              computerChoice={computerChoice}
              computerScore={computerScore}
              roundWinner={roundWinner}
              userScore={userScore}
              userChoice={userChoice}
              selectWinner={selectWinner}
              selectWeapon={selectWeapon}
              playerVsComputerGame={playerVsComputerGame}
            />
          )}
        />
        <Route
          path={`/laptop-vs-desktop-game-mode`}
          render={props => (
            <ComputerGameMode
              computerChoice={computerChoice}
              computerScore={computerScore}
              roundWinner={roundWinner}
              laptopScore={laptopScore}
              laptopChoice={laptopChoice}
              laptopVsComputerGame={laptopVsComputerGame}
              decideWinner={decideWinner}
              chooseWeapon={chooseWeapon}
            />
          )}
        />
      </Switch>
    </BrowserRouter>
  );
};

export default Routes;



=======================================================================

import React from 'react';
import './App.css';
import Player from './components/Player';

const weapons = ['rock', 'paper', 'scissors'];

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      playerOne: weapons[0],
      playerTwo: weapons[0],
      winner: ''
    };
  }

  startGame = () => {
    let count = 0;
    let gameInterval = setInterval(() => {
      count++;
      this.setState({
        playerTwo: weapons[Math.floor(Math.random() * weapons.length)],
        winner: ''
      });
      if (count > 5) {
        clearInterval(gameInterval);
        this.setState({
          winner: this.selectWinner()
        });
      }
    }, 100);
  };

  selectWinner = () => {
    const { playerOne, playerTwo } = this.state;
    // main logic goes in here
    if (playerOne === playerTwo) {
      return 'Oops its a tie';
    } else if (
      (playerOne === 'rock' && playerTwo === 'scissors') ||
      (playerOne === 'scissors' && playerTwo === 'paper') ||
      (playerOne === 'paper' && playerTwo === 'rock')
    ) {
      return 'Player One Wins!';
    } else {
      return 'Player Two Wins';
    }
  };

  selectWeapon = weapon => {
    this.setState({
      playerOne: weapon,
      winner: ''
    });
  };

  render() {
    const { winner, playerOne, playerTwo } = this.state;

    return (
      <>
        <h1>ROck Paper Scissors</h1>
        <div>
          <Player weapon={playerOne} />
          <Player weapon={playerTwo} />
        </div>
        <div>
          <button
            className="weaponBtn"
            onClick={() => this.selectWeapon('rock')}
          >
            rock
          </button>
          <button
            className="weaponBtn"
            onClick={() => this.selectWeapon('paper')}
          >
            paper
          </button>
          <button
            className="weaponBtn"
            onClick={() => this.selectWeapon('scissors')}
          >
            scissors
          </button>
        </div>
        <div className="winner">{winner ? this.selectWinner() : null}</div>
        <button type="button" className="start" onClick={this.startGame}>
          start
        </button>
      </>
    );
  }
}

export default App;
